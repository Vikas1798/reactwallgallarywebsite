{"version":3,"sources":["components/imagepopup.js","components/wallgallary.jsx","App.js","reportWebVitals.js","index.js"],"names":["ImagePopUp","props","className","onClick","click","src","show","alt","Wallgallary","useState","images","setImages","data","setData","showimg","setShowImg","useEffect","axios","get","then","response","catch","error","console","log","map","info","imgsrc","urls","thumb","alt_description","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAaeA,EAXI,SAACC,GACpB,OACI,mCACA,qBAAKC,UAAU,uBAAuBC,QAASF,EAAMG,MAArD,SACQ,qBAAKF,UAAU,yBAAf,SACI,qBAAKA,UAAU,QAAQG,IAAKJ,EAAMK,KAAMC,IAAI,mBCiC7CC,G,MAnCK,WAAO,IAAD,EACKC,mBAAS,IADd,mBACfC,EADe,KACRC,EADQ,OAECF,qBAFD,mBAEfG,EAFe,KAEVC,EAFU,OAGOJ,oBAAS,GAHhB,mBAGfK,EAHe,KAGNC,EAHM,KAK1BC,qBAAU,WACNC,IACGC,IAAI,mDACJC,MAAK,SAACC,GAAD,OAAcT,EAAUS,EAASR,SACtCS,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,IAWL,OACI,qCACER,EAAU,cAAC,EAAD,CAAYR,KAAMM,EAAMR,MANpB,WAChBW,GAAW,MAKgD,MAE7C,IAAZD,EACEJ,EAAOe,KAAI,SAACC,GAAD,OACX,qBAAKvB,QAAU,kBAfLwB,EAeqBD,EAAKE,KAAKC,MAd/Cd,GAAW,QACXF,EAAQc,GAFO,IAACA,GAeV,SACA,qBAAKzB,UAAU,SAAoCG,IAAKqB,EAAKE,KAAKC,MAAOtB,IAAI,WAAhDmB,EAAKI,sBAE7B,UCtBEC,EATH,WACV,OAAQ,mCACL,qBAAK7B,UAAU,MAAf,SACC,cAAC,EAAD,SCKS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6e866e41.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./imagepopup.css\";\r\nconst ImagePopUp = (props) =>{\r\nreturn(\r\n    <>\r\n    <div className=\"imagepopupbackground\" onClick={props.click}>\r\n            <div className=\"clickedimagebackground\" >\r\n                <img className=\"image\" src={props.show} alt=\"refresh\"/>\r\n            </div>\r\n    </div>\r\n    </>\r\n    );\r\n}\r\nexport default ImagePopUp;","import React, { useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ImagePopUp from \"../components/imagepopup\";\r\nimport \"./wallgallary.css\";\r\n\r\nconst Wallgallary = () => {\r\n    const [images,setImages] = useState([]);\r\n    const [data,setData] = useState();\r\n    const [showimg, setShowImg]= useState(false);\r\n\r\nuseEffect(() => {\r\n    axios\r\n      .get(\"http://www.mocky.io/v2/5ecb5c353000008f00ddd5a0\")\r\n      .then((response) => setImages(response.data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\nconst Showimage =(imgsrc)=>{\r\n  setShowImg(true);\r\n  setData(imgsrc);\r\n  }\r\n\r\n  const Hideimage = () =>{\r\n    setShowImg(false);\r\n  }\r\n  \r\nreturn (\r\n    <>\r\n    { showimg ? <ImagePopUp show={data} click={Hideimage} /> : null } \r\n     \r\n    { showimg === false ?\r\n        images.map((info) => (\r\n        <div onClick={ () => Showimage(info.urls.thumb)} >\r\n        <img className=\"images\" key={info.alt_description} src={info.urls.thumb} alt=\"refresh\"/>\r\n        </div> \r\n        )) : null\r\n    }    \r\n    </>\r\n  );\r\n};\r\nexport default Wallgallary;\r\n","import React from 'react';\nimport './App.css';\nimport Wallgallary from \"./components/wallgallary\"\n\nconst App = () => {\n  return (<>\n     <div className=\"app\">\n      <Wallgallary />\n     </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}